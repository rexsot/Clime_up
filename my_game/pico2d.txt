가로 세로
1920 1080기준

캐릭터 - 92, 100
판정
가시 - 100 30
블록 - 46 46

방향 - 
x속도값이 0 초과일 때: 우측(0) look_right
x속도값이 0 미만일 때: 좌측(1) look_left

접지판별: int grounded = 0,1,2

접지중: grounded
코요태: coyote // 접지가 아니면 0.n초간 코요태 
공중: in_air

if grounded { // 접지
  if x == 0 방향 정지 출력
  else 방향 달리기 출력
}
else {


}

20
0
-20

-1 = 2
1 = 1

1 = 2
-1 = 1

12

160 x 9

y가속도
점프 입력시: y가속도 945
점프 입력중: y가속도 0

체공시: y가속도 -135
종단속도 및 접지시: 가속도 0

y속도
머리를 박거나 접지시: y속도 0
상승종단속도:
추락종단속도: 1440

최소점프 - 1칸
대점프 - 2칸
대시 - 3칸


접지 및 x속도값이 0: 방향 정지 출력 (x속도값이 0일 때 방향값이 변동되지 않으므로, 마지막으로 움직인 방향이 된다.)
접지 및 x속도값이 0이 아님: 방향 달리기 출력

공중 이동/정지: 방향 점프 출력 (x속도값이 0일 때 방향값이 변동되지 않으므로, 마지막으로 움직인 방향이 된다.)

속도

걷기, x
90
점프 순간 최고 속도, y
105
벽 점프 순간 최고 속도, x
130
낙하 종단 속도, y
160
대각선 대시, x
169.71
대시
240

가속도
속도 90 미만
+10.83 앞
-10.83
-10.83

속도 90 이상, 지면
-6.66 앞
-16.67
-16.67

속도 90 이상, 공중
-4.33 앞
-10.83
-10.83

방법 1
state를 이용해서 idle, l_run, R_run을 구현,
좌우키입력이 없고, 





        if self.loc_y > 150: # 체공판별(임시)
            self.grounded = 1
            if self.vel_y > -405 and press_space == 1:
                self.acc_y -= 67.5
            else:
                self.acc_y -= 135


가속도(고정)
점프 키를 누른 순간
+105
점프 직후 점프 키 떼지 않기(점프 후 12프레임까지)
0
수직 속력 -45~45 pps, 점프 키 누르기
-7.5
종단 속력 (160)에서
0
땅에 닿은 경우
0
그 외
-15



   0.5
 0  1
-1  1
   0



추락
1칸당 0.1, 첫 1칸은 0.2

5칸 0.6
4칸 0.5
3칸 0.4
2칸 0.25
1칸 0.15?

8, 11
pps = 속도
pps_f = 가속도




0.4

대시 0.25초

위대쉬 3칸 0.8s
사선대쉬 2칸씩 0.65? 67?
대점프 1.5칸 0.6s       (상승 0.30, 정지 0.05, 추락 0.25)
소점프 0.5칸 0.3s       (0.1 0.05 0.1)

상승
0.5칸당 0.1s
최대 1.5칸(0.3s)

정지
0.1초

하강
첫 1칸은 0.2s
1칸당 0.1s





상태 - 점프여부
grounded #바닥에 있을 때
in_air #
jump_state 

접지
코요태
공중

상승
정지
하강

대쉬






celeste
1920 x 1080기준
주인공 
50 100   (서있을 때)
100 100 (움직일 때)


예제 
대학 배경 - 1280 1024
캐릭터 - 100 100
서있을 때(보이는 판정) - 100 50


타이틀(아무 키로 진입)

게임 - 일시정지(esc)

플레이어 - 점프 대시 이동
가시 - 피격시 사망
추락 - y -150에서 사망
장애물 및 지면:
옆면 충돌시 - X속도/가속도 0
윗/아랫면 충돌시 - Y속도/가속도 0
딸기 - 다음 스테이지로 이동









